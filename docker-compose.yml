
services:
  # ClickHouse时序数据库服务
  clickhouse:
    image: clickhouse/clickhouse-server:24.3-alpine
    container_name: cryptofeed-clickhouse
    environment:
      CLICKHOUSE_DB: cryptofeed
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: password123
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    ports:
      - "8123:8123"  # HTTP接口（查询、管理）
      - "9000:9000"  # Native接口（高性能写入）
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
      - ./docker/clickhouse/config:/etc/clickhouse-server/config.d
      - ./docker/clickhouse/init:/docker-entrypoint-initdb.d
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - cryptofeed-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Cryptofeed监控服务
  cryptofeed-monitor:
    build: .
    container_name: cryptofeed-monitor
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    environment:
      # ClickHouse数据库配置
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: password123
      CLICKHOUSE_DATABASE: cryptofeed

      # 连接池配置
      STREAMS_PER_CONNECTION: 1000
      AUTO_SCALING_ENABLED: "true"
      SYMBOL_CHECK_INTERVAL: 300

      # 监控配置
      HEALTH_CHECK_PORT: 8080
      METRICS_ENABLED: "true"

      # 日志级别
      LOG_LEVEL: INFO

      # Python环境
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    networks:
      - cryptofeed-network
    depends_on:
      clickhouse:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Grafana监控面板（可选）
  grafana:
    image: grafana/grafana:latest
    container_name: cryptofeed-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - cryptofeed-network
    restart: unless-stopped
    depends_on:
      - clickhouse
    profiles:
      - monitoring

  # Prometheus监控（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: cryptofeed-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - cryptofeed-network
    restart: unless-stopped
    depends_on:
      - cryptofeed-monitor
    profiles:
      - monitoring

volumes:
  clickhouse_data:
    driver: local
  clickhouse_logs:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  cryptofeed-network:
    driver: bridge